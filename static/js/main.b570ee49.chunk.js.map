{"version":3,"sources":["components/Card/index.js","components/Header/index.js","components/Wrapper/index.js","pages/Game.js","App.js","index.js"],"names":["Card","props","className","data-clicked","clicked","src","image","alt","name","onClick","Header","message","score","topScore","Wrapper","children","Game","state","images","sortCards","imageArray","sort","Math","random","i","length","id","handleBtnClick","map","setState","this","key","Component","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"+tDAiBeA,G,MAdF,SAAAC,GACT,OACI,yBAAKC,UAAU,QACX,yBACIC,eAAcF,EAAMG,QACpBC,IAAKJ,EAAMK,MACXC,IAAKN,EAAMO,KACXN,UAAU,aACVO,QAASR,EAAMQ,aCOhBC,G,MAfA,SAAAT,GACX,OAEI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YAAf,eACA,yBAAKA,UAAU,YAAYD,EAAMU,SACjC,yBAAKT,UAAU,YAAf,UAAkCD,EAAMW,MAAxC,iBAA6DX,EAAMY,eCJxEC,G,MAJC,SAAAb,GACd,OAAO,yBAAKC,UAAU,WAAf,IAA2BD,EAAMc,Y,QCqF3BC,E,2MAlFXC,MAAQ,CACJC,SACAN,MAAO,EACPC,SAAU,EACVF,QAAS,4B,EAGbQ,UAAY,SAAAC,GACRA,EAAWC,MAAK,kBAAMC,KAAKC,SAAW,MACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAWK,OAAQD,IACnCJ,EAAWI,GAAGE,GAAKF,G,EAU3BG,eAAiB,SAAAD,GACb,IAAIN,EAAa,EAAKH,MAAMC,OAC5B,GAAKE,EAAWM,GAAItB,QAWhBgB,EAAWQ,KAAI,SAAAtB,GAAK,OAAIA,EAAMF,SAAU,KACxC,EAAKe,UAAUC,GACfA,EAAa,EAAKH,MAAMC,OACxB,EAAKW,SAAS,CACVX,OAAQE,EACRR,MAAO,EACPD,QAAS,kCAdb,GAFAS,EAAWM,GAAItB,SAAU,EACzB,EAAKe,UAAUC,GACX,EAAKH,MAAML,OAAS,EAAKK,MAAMJ,SAC/B,OAAO,EAAKgB,SAAS,CACjBX,OAAQE,EACRR,MAAO,EAAKK,MAAML,MAAQ,EAC1BC,SAAU,EAAKI,MAAMJ,SAAW,EAChCF,QAAS,4B,mFAfrB,IAAIS,EAAaU,KAAKb,MAAMC,OAC5BY,KAAKX,UAAUC,GACfU,KAAKD,SAAS,CAAEX,OAAQE,M,+BA8BlB,IAAD,OACL,OACI,6BAEI,6BACI,kBAAC,EAAD,CACIR,MAAOkB,KAAKb,MAAML,MAClBC,SAAUiB,KAAKb,MAAMJ,SACrBF,QAASmB,KAAKb,MAAMN,WAQ5B,6BACI,kBAAC,EAAD,KACKmB,KAAKb,MAAMC,OAAOU,KAAI,SAAAtB,GAAK,OACxB,kBAAC,EAAD,CACIoB,GAAIpB,EAAMoB,GACVK,IAAKzB,EAAMoB,GACXtB,QAASE,EAAMF,QACfE,MAAOA,EAAMA,MACbG,QAAS,kBAAM,EAAKkB,eAAerB,EAAMoB,iB,GAxEtDM,aCQJC,EATH,WACR,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWpB,MCHxDqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b570ee49.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Card = props => {\r\n    return(\r\n        <div className=\"card\">\r\n            <img \r\n                data-clicked={props.clicked}\r\n                src={props.image} \r\n                alt={props.name}\r\n                className=\"card-image\"\r\n                onClick={props.onClick}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = props => {\r\n    return (\r\n\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\">Memory Game</div>\r\n                    <div className=\"col-lg-4\">{props.message}</div>\r\n                    <div className=\"col-lg-4\">Score: {props.score} | Top Score: {props.topScore}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Wrapper = props => {\r\n  return <div className=\"wrapper\"> {props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;","import React, { Component } from \"react\";\r\nimport Card from \"./../components/Card\";\r\nimport Header from \"./../components/Header\";\r\nimport Wrapper from \"./../components/Wrapper\";\r\nimport images from \"./../images.json\";\r\n\r\nclass Game extends Component {\r\n    state = {\r\n        images,\r\n        score: 0,\r\n        topScore: 0,\r\n        message: \"Click an image to begin!\"\r\n    };\r\n\r\n    sortCards = imageArray => {\r\n        imageArray.sort(() => Math.random() - 0.5);\r\n        for (let i = 0; i < imageArray.length; i++) {\r\n            imageArray[i].id = i;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let imageArray = this.state.images;\r\n        this.sortCards(imageArray);\r\n        this.setState({ images: imageArray });\r\n    }\r\n\r\n    handleBtnClick = id => {\r\n        let imageArray = this.state.images;\r\n        if (!imageArray[id].clicked) {\r\n            imageArray[id].clicked = true;\r\n            this.sortCards(imageArray);\r\n            if (this.state.score >= this.state.topScore)\r\n                return this.setState({\r\n                    images: imageArray,\r\n                    score: this.state.score + 1,\r\n                    topScore: this.state.topScore + 1,\r\n                    message: \"You guessed correctly!\"\r\n                });\r\n        } else {\r\n            imageArray.map(image => image.clicked = false);\r\n            this.sortCards(imageArray);\r\n            imageArray = this.state.images;\r\n            this.setState({\r\n                images: imageArray,\r\n                score: 0,\r\n                message: \"You guessed incorrectly!\"\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <div>\r\n                    <Header\r\n                        score={this.state.score}\r\n                        topScore={this.state.topScore}\r\n                        message={this.state.message}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div>\r\n\r\n                </div> */}\r\n\r\n                <div>\r\n                    <Wrapper>\r\n                        {this.state.images.map(image => (\r\n                            <Card\r\n                                id={image.id}\r\n                                key={image.id}\r\n                                clicked={image.clicked}\r\n                                image={image.image}\r\n                                onClick={() => this.handleBtnClick(image.id)}\r\n                            />\r\n                        ))}\r\n\r\n                    </Wrapper>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Game from \"./pages/Game\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <Route exact path=\"/clicky-game\" component={Game} />\r\n        </Router>\r\n        // <Game />\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}